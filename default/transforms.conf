# The Metrics log lines use a comma to break up events
# 9/11/17 8:47:13.635 PM 09-11-2017 20:47:13.635 +0100 INFO  Metrics - group=thruput, name=thruput
[build_metric_names_metrics]
REGEX= (INFO  Metrics - group=([a-zA-Z_\-]+))(, )?(.*)
FORMAT = metrics.$2#$4
DEST_KEY = _raw

# The License log lines use a space to break up events
# 09-11-2017 20:34:42.653 +0100 INFO  LicenseUsage - type=Usage s=looper st=splunk_metric h="rmorgan-mbp" o="" idx="main" i="2ECD2EBB-03A2-4C2A-AFD3-BBEE939E99D0" pool="auto_generated_pool_download-trial" b=49535 poolsz=524288000
[build_metric_names_license_usage]
REGEX = (INFO  LicenseUsage - )(.*)$
FORMAT = licenseusage#$2
DEST_KEY = _raw

[build_metric_names_scheduler]
#09-21-2017 15:03:32.697 +0100 INFO  SavedSplunker - savedsearch_id="nobody;Splunk_CiscoSecuritySuite;_ACCELERATE_48C9DF7F-607E-4A10-B220-53D2B4EF8CE9_Splunk_CiscoSecuritySuite_nobody_e800ae558177e730_ACCELERATE_", search_type="report_acceleration", user="nobody", app="Splunk_CiscoSecuritySuite", savedsearch_name="_ACCELERATE_48C9DF7F-607E-4A10-B220-53D2B4EF8CE9_Splunk_CiscoSecuritySuite_nobody_e800ae558177e730_ACCELERATE_", priority=default, status=skipped, reason="The maximum number of concurrent auto-summarization searches on this instance has been reached", concurrency_category="summarization_scheduled", concurrency_context="instance-wide", concurrency_limit=2, scheduled_time=1506002400, window_time=0
REGEX = (INFO  SavedSplunker - )(.*)$
FORMAT = scheduler#$2
DEST_KEY = _raw

# Any key=value pair where the "value" is not a number we want to add this to the _meta
# so that they will become dimensions for how the data can be cut
[extract_dimensions]
REGEX = \s([a-zA-Z_\-]+)=("[^"]+"|[a-zA-Z_/][a-zA-Z0-9_/\-\.\-]*)
WRITE_META = true
REPEAT_MATCH = true
FORMAT = $1::$2

# This popping transform assumes that the delim is a comma
# When we can pop no more we are "finished"
[pop_with_comma]
REGEX = ^([^#]+)#([a-zA-Z_\-\.*]+)[=:]("([^"]+)"|[^\s,]+), (.+)$
FORMAT = $1#$4
DEFAULT_VALUE = finished
DEST_KEY = _raw

# This popping transform assumes that the delim is a space
# When we can pop no more we are "finished"
[pop_with_space]
REGEX = ^([^#]+)#([a-zA-Z_\-\.]+)="?([^ ]+)"? (.+)$
FORMAT = $1#$4
DEFAULT_VALUE = finished
DEST_KEY = _raw

# This transform performs the actual clone, it does not modify the event in any way.
# If this only cloned when the regex matched, it would reduce the number of unnecessary clones
[clone]
REGEX = (never match)
DEST_KEY = _raw
CLONE_SOURCETYPE = splunk_metric

[clone_splunkd]
REGEX = (never match)
DEST_KEY = _raw
CLONE_SOURCETYPE = splunkd

# We need to change the sourcetype as it is too confusing to allow the clones to hit the same stanza
# The new source is not used for any logic
[change_source_license]
REGEX = (.*)
SOURCE_KEY = MetaData:Source
DEST_KEY = MetaData:Source
FORMAT = source::.../var/lib/splunk/license.log

[change_source_web_service]
REGEX = (.*)
SOURCE_KEY = MetaData:Source
DEST_KEY = MetaData:Source
FORMAT = source::.../var/lib/splunk/web_service.log

# We need to change the sourcetype as it is too confusing to allow the clones to hit the same stanza
# The new source is not used for any logic
[change_source_metrics]
REGEX = (.*)
SOURCE_KEY = MetaData:Source
DEST_KEY = MetaData:Source
FORMAT = source::.../var/lib/splunk/metrics.log

[change_source_scheduler]
REGEX = (.*)
SOURCE_KEY = MetaData:Source
DEST_KEY = MetaData:Source
FORMAT = source::.../var/lib/splunk/scheduler.log

# The last function to call, this parses the current metric and assigns its value to value
# and builds its metric name. Attribute is added to help search. After this, teh event is 
# ready for the metrics index
[make_metric]
REGEX = ^([^#]+)#([^=,]+)=("[^"]+"|[^, ]+),?
WRITE_META = true
FORMAT = metric_name::$1.$2 _value::$3 attribute::$2

# Elements that have no more variables to 'pop' set themselves as "finished", we have 
# to intercept these and route to null
[drop-finished]
SOURCE_KEY = _raw
REGEX = ^finished$
DEST_KEY = queue
FORMAT = nullQueue

# All events with _values that are just string should be routed to null, anything else should 
[reroute-numbers]
SOURCE_KEY = _meta
REGEX = _value::\d*(.\d*)?\s?
DEST_KEY = _MetaData:Index
FORMAT = metrics_internal

# All events with _values that are just string should be routed to null, anything else should 
[drop-strings]
SOURCE_KEY = _meta
REGEX = _value::([0..9]*/D+[0..9]*)\s?
DEST_KEY = queue
FORMAT = nullQueue

# By default we send all data to the metrics_internal_spam, anything that can be 
# successfully extracted as a number will be will be routed to a real metrics store
[set_index_metrics]
REGEX = .
DEST_KEY = _MetaData:Index
FORMAT = metrics_internal_spam

# helpful to debug what is in the _meta queue
[print_meta]
REGEX = ^(.*)$
SOURCE_KEY = _meta
DEST_KEY = _raw
FORMAT = $1

[set_st_splunk_metric]
REGEX = (.*)
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::splunk_metric

# All the transform to get the web log performance data

[clone_web_view_time]
REGEX = (never match)
DEST_KEY = _raw
CLONE_SOURCETYPE = splunk_metrics_web_view_time

[clone_web_template_time]
REGEX = (never match)
DEST_KEY = _raw
CLONE_SOURCETYPE = splunk_metrics_web_template_time

# we only need some of the web log stream, so route everything to null, and then we can pick out what we want to keep
[route_to_null]
REGEX = (.)
DEST_KEY = queue
FORMAT = nullQueue

# if the regex matches then pull the event back from going into the null queue
[save_perf]
REGEX = INFO\s+\[([a-f0-9]+)\]\s+view:\d+\s+-\s+PERF
DEST_KEY = queue
FORMAT = indexQueue

[extract_web_perf_view_time]
#REGEX =INFO\s+\[(?<client_id>[a-f0-9]+)\] view:(?<view_id>\d+)\s+-\s+PERF\s-\s+viewType=(?<viewType>[a-z]+)\sviewTime=(?<view_time>\d+|\d+\.\d+)s\stemplateTime=(?<templateTime>\d+|\d+\.\d+)s
REGEX =INFO\s+\[([a-f0-9]+)\] view:(\d+)\s+-\s+PERF\s-\s+viewType=([a-z]+)\sviewTime=(\d+|\d+\.\d+)s\stemplateTime=(\d+|\d+\.\d+)s
WRITE_META = true
FORMAT = metric_name::web_ui.view_time client_id::$1 view_id::$2 view_type::$3 _value::$4

[extract_web_perf_template_time]
#REGEX =INFO\s+\[(?<client_id>[a-f0-9]+)\] view:(?<view_id>\d+)\s+-\s+PERF\s-\s+viewType=(?<viewType>[a-z]+)\sviewTime=(?<view_time>\d+|\d+\.\d+)s\stemplateTime=(?<templateTime>\d+|\d+\.\d+)s
REGEX =INFO\s+\[([a-f0-9]+)\] view:(\d+)\s+-\s+PERF\s-\s+viewType=([a-z]+)\sviewTime=(\d+|\d+\.\d+)s\stemplateTime=(\d+|\d+\.\d+)s
WRITE_META = true
FORMAT = metric_name::web_ui.template_time client_id::$1 view_id::$2 view_type::$3 _value::$5


